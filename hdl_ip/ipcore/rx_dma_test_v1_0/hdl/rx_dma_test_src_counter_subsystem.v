// -------------------------------------------------------------
// 
// File Name: /home/draco/git/adi_dma_testing/iq_dma_example/hdl_ip/hdlsrc/rx_dma_test/rx_dma_test_src_counter_subsystem.v
// Created: 2025-08-22 09:27:16
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: rx_dma_test_src_counter_subsystem
// Source Path: rx_dma_test/LDCR_D/counter_subsystem
// Hierarchy Level: 1
// Model version: 9.625
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module rx_dma_test_src_counter_subsystem
          (clk,
           reset,
           enb,
           frameTrigger_i,
           autoTrigger_i,
           frameLen_i,
           idleTime_i,
           ch1_re,
           ch1_im,
           ch2_re,
           ch2_im,
           valid_o);


  input   clk;
  input   reset;
  input   enb;
  input   frameTrigger_i;
  input   autoTrigger_i;
  input   [15:0] frameLen_i;  // uint16
  input   signed [23:0] idleTime_i;  // sfix24
  output  [15:0] ch1_re;  // uint16
  output  [15:0] ch1_im;  // uint16
  output  [15:0] ch2_re;  // uint16
  output  [15:0] ch2_im;  // uint16
  output  valid_o;


  wire Compare_To_Constant1_out1;
  reg  Delay_out1;
  wire Compare_To_Constant_out1;
  wire Logical_Operator_out1;
  wire frameValid;
  wire [15:0] idxCount_o;  // uint16
  wire [15:0] Constant_out1;  // uint16
  wire [16:0] Add_1;  // ufix17
  wire [16:0] Add_2;  // ufix17
  wire [16:0] Add_out1;  // ufix17
  wire [15:0] Data_Type_Conversion1_out1;  // uint16
  wire [15:0] Constant1_out1;  // uint16
  wire [17:0] Add1_1;  // ufix18
  wire [17:0] Add1_2;  // ufix18
  wire [17:0] Add1_out1;  // ufix18
  wire [15:0] Data_Type_Conversion2_out1;  // uint16
  wire [15:0] Constant2_out1;  // uint16
  wire [18:0] Add2_1;  // ufix19
  wire [18:0] Add2_2;  // ufix19
  wire [18:0] Add2_out1;  // ufix19
  wire [15:0] Data_Type_Conversion3_out1;  // uint16


  assign Compare_To_Constant1_out1 = frameTrigger_i == 1'b1;


  always @(posedge clk)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay_out1 <= frameTrigger_i;
        end
      end
    end


  assign Compare_To_Constant_out1 = Delay_out1 == 1'b0;


  assign Logical_Operator_out1 = Compare_To_Constant1_out1 & Compare_To_Constant_out1;


  rx_dma_test_src_frameCtrl u_frameCtrl (.clk(clk),
                                         .reset(reset),
                                         .enb(enb),
                                         .frameTrigger(Logical_Operator_out1),
                                         .autoTrigger_i(autoTrigger_i),
                                         .idleTime_i(idleTime_i),  // sfix24
                                         .frameLen_i(frameLen_i),  // uint16
                                         .frameValid(frameValid),
                                         .idxCount_o(idxCount_o)  // uint16
                                         );
  assign ch1_re = idxCount_o;

  assign Constant_out1 = 16'b0000000000000001;


  assign Add_1 = {1'b0, idxCount_o};
  assign Add_2 = {1'b0, Constant_out1};
  assign Add_out1 = Add_1 + Add_2;


  assign Data_Type_Conversion1_out1 = Add_out1[15:0];


  assign ch1_im = Data_Type_Conversion1_out1;

  assign Constant1_out1 = 16'b0000000000000001;


  assign Add1_1 = {1'b0, Add_out1};
  assign Add1_2 = {2'b0, Constant1_out1};
  assign Add1_out1 = Add1_1 + Add1_2;


  assign Data_Type_Conversion2_out1 = Add1_out1[15:0];


  assign ch2_re = Data_Type_Conversion2_out1;

  assign Constant2_out1 = 16'b0000000000000001;


  assign Add2_1 = {1'b0, Add1_out1};
  assign Add2_2 = {3'b0, Constant2_out1};
  assign Add2_out1 = Add2_1 + Add2_2;


  assign Data_Type_Conversion3_out1 = Add2_out1[15:0];


  assign ch2_im = Data_Type_Conversion3_out1;

  assign valid_o = frameValid;

endmodule  // rx_dma_test_src_counter_subsystem

