// -------------------------------------------------------------
// 
// File Name: /home/draco/git/adi_dma_testing/iq_dma_example/hdl_ip/hdlsrc/rx_dma_test/rx_dma_test_src_RADIX22FFT_SDF1_5.v
// Created: 2025-08-21 13:52:00
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: rx_dma_test_src_RADIX22FFT_SDF1_5
// Source Path: rx_dma_test/LDCR_D/Channelizer_CH1/FFT/RADIX22FFT_SDF1_5
// Hierarchy Level: 3
// Model version: 9.535
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module rx_dma_test_src_RADIX22FFT_SDF1_5
          (clk,
           reset,
           enb,
           din_5_1_re_dly,
           din_5_1_im_dly,
           din_5_vld_dly,
           rd_5_Addr,
           rd_5_Enb,
           twdl_5_1_re,
           twdl_5_1_im,
           proc_5_enb,
           softReset,
           dout_5_1_re,
           dout_5_1_im,
           dout_5_1_vld,
           dinXTwdl_5_1_vld);


  input   clk;
  input   reset;
  input   enb;
  input   signed [17:0] din_5_1_re_dly;  // sfix18_En5
  input   signed [17:0] din_5_1_im_dly;  // sfix18_En5
  input   din_5_vld_dly;
  input   rd_5_Addr;  // ufix1
  input   rd_5_Enb;
  input   signed [13:0] twdl_5_1_re;  // sfix14_En12
  input   signed [13:0] twdl_5_1_im;  // sfix14_En12
  input   proc_5_enb;
  input   softReset;
  output  signed [18:0] dout_5_1_re;  // sfix19_En5
  output  signed [18:0] dout_5_1_im;  // sfix19_En5
  output  dout_5_1_vld;
  output  dinXTwdl_5_1_vld;


  wire signed [18:0] din_re;  // sfix19_En5
  wire signed [18:0] din_im;  // sfix19_En5
  wire signed [18:0] dinXTwdl_re;  // sfix19_En5
  wire signed [18:0] dinXTwdl_im;  // sfix19_En5
  reg  x_vld;
  wire signed [18:0] wrData_re;  // sfix19_En5
  wire signed [18:0] wrData_im;  // sfix19_En5
  wire wrAddr;  // ufix1
  wire wrEnb;
  reg signed [18:0] twoLocationReg_0_MEM_re_0;  // sfix19
  reg signed [18:0] twoLocationReg_0_MEM_im_0;  // sfix19
  reg signed [18:0] twoLocationReg_0_MEM_re_1;  // sfix19
  reg signed [18:0] twoLocationReg_0_MEM_im_1;  // sfix19
  reg signed [18:0] twoLocationReg_0_dout_re_reg;  // sfix19
  reg signed [18:0] twoLocationReg_0_dout_im_reg;  // sfix19
  reg signed [18:0] twoLocationReg_0_MEM_re_0_next;  // sfix19_En5
  reg signed [18:0] twoLocationReg_0_MEM_im_0_next;  // sfix19_En5
  reg signed [18:0] twoLocationReg_0_MEM_re_1_next;  // sfix19_En5
  reg signed [18:0] twoLocationReg_0_MEM_im_1_next;  // sfix19_En5
  reg signed [18:0] twoLocationReg_0_dout_re_reg_next;  // sfix19_En5
  reg signed [18:0] twoLocationReg_0_dout_im_reg_next;  // sfix19_En5
  reg signed [18:0] x_re;  // sfix19_En5
  reg signed [18:0] x_im;  // sfix19_En5
  reg signed [19:0] Radix22ButterflyG1_btf1_re_reg;  // sfix20
  reg signed [19:0] Radix22ButterflyG1_btf1_im_reg;  // sfix20
  reg signed [19:0] Radix22ButterflyG1_btf2_re_reg;  // sfix20
  reg signed [19:0] Radix22ButterflyG1_btf2_im_reg;  // sfix20
  reg signed [18:0] Radix22ButterflyG1_x_re_dly1;  // sfix19
  reg signed [18:0] Radix22ButterflyG1_x_im_dly1;  // sfix19
  reg  Radix22ButterflyG1_x_vld_dly1;
  reg signed [18:0] Radix22ButterflyG1_dinXtwdl_re_dly1;  // sfix19
  reg signed [18:0] Radix22ButterflyG1_dinXtwdl_im_dly1;  // sfix19
  reg signed [18:0] Radix22ButterflyG1_dinXtwdl_re_dly2;  // sfix19
  reg signed [18:0] Radix22ButterflyG1_dinXtwdl_im_dly2;  // sfix19
  reg  Radix22ButterflyG1_dinXtwdl_vld_dly1;
  reg  Radix22ButterflyG1_dinXtwdl_vld_dly2;
  wire signed [19:0] Radix22ButterflyG1_btf1_re_reg_next;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_btf1_im_reg_next;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_btf2_re_reg_next;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_btf2_im_reg_next;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_add_cast;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_add_cast_1;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_sub_cast;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_sub_cast_1;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_add_cast_2;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_add_cast_3;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_sub_cast_2;  // sfix20_En5
  wire signed [19:0] Radix22ButterflyG1_sub_cast_3;  // sfix20_En5
  reg signed [18:0] xf_re;  // sfix19_En5
  reg signed [18:0] xf_im;  // sfix19_En5
  reg  xf_vld;
  wire signed [18:0] dinXTwdlf_re;  // sfix19_En5
  wire signed [18:0] dinXTwdlf_im;  // sfix19_En5
  wire dinxTwdlf_vld;
  wire signed [18:0] btf1_re;  // sfix19_En5
  wire signed [18:0] btf1_im;  // sfix19_En5
  wire signed [18:0] btf2_re;  // sfix19_En5
  wire signed [18:0] btf2_im;  // sfix19_En5
  reg  btf_vld;


  assign din_re = {din_5_1_re_dly[17], din_5_1_re_dly};



  assign din_im = {din_5_1_im_dly[17], din_5_1_im_dly};



  rx_dma_test_src_Complex3Multiply_block u_MUL3 (.clk(clk),
                                                 .reset(reset),
                                                 .enb(enb),
                                                 .din_re(din_re),  // sfix19_En5
                                                 .din_im(din_im),  // sfix19_En5
                                                 .din_5_vld_dly(din_5_vld_dly),
                                                 .twdl_5_1_re(twdl_5_1_re),  // sfix14_En12
                                                 .twdl_5_1_im(twdl_5_1_im),  // sfix14_En12
                                                 .softReset(softReset),
                                                 .dinXTwdl_re(dinXTwdl_re),  // sfix19_En5
                                                 .dinXTwdl_im(dinXTwdl_im),  // sfix19_En5
                                                 .dinXTwdl_5_1_vld(dinXTwdl_5_1_vld)
                                                 );

  always @(posedge clk)
    begin : intdelay_process
      if (reset == 1'b1) begin
        x_vld <= 1'b0;
      end
      else begin
        if (enb) begin
          x_vld <= rd_5_Enb;
        end
      end
    end



  // twoLocationReg_0
  always @(posedge clk)
    begin : twoLocationReg_0_process
      if (reset == 1'b1) begin
        twoLocationReg_0_MEM_re_0 <= 19'sb0000000000000000000;
        twoLocationReg_0_MEM_im_0 <= 19'sb0000000000000000000;
        twoLocationReg_0_MEM_re_1 <= 19'sb0000000000000000000;
        twoLocationReg_0_MEM_im_1 <= 19'sb0000000000000000000;
        twoLocationReg_0_dout_re_reg <= 19'sb0000000000000000000;
        twoLocationReg_0_dout_im_reg <= 19'sb0000000000000000000;
      end
      else begin
        if (enb) begin
          twoLocationReg_0_MEM_re_0 <= twoLocationReg_0_MEM_re_0_next;
          twoLocationReg_0_MEM_im_0 <= twoLocationReg_0_MEM_im_0_next;
          twoLocationReg_0_MEM_re_1 <= twoLocationReg_0_MEM_re_1_next;
          twoLocationReg_0_MEM_im_1 <= twoLocationReg_0_MEM_im_1_next;
          twoLocationReg_0_dout_re_reg <= twoLocationReg_0_dout_re_reg_next;
          twoLocationReg_0_dout_im_reg <= twoLocationReg_0_dout_im_reg_next;
        end
      end
    end

  always @(rd_5_Addr, twoLocationReg_0_MEM_im_0, twoLocationReg_0_MEM_im_1,
       twoLocationReg_0_MEM_re_0, twoLocationReg_0_MEM_re_1,
       twoLocationReg_0_dout_im_reg, twoLocationReg_0_dout_re_reg, wrAddr,
       wrData_im, wrData_re, wrEnb) begin
    twoLocationReg_0_MEM_re_0_next = twoLocationReg_0_MEM_re_0;
    twoLocationReg_0_MEM_im_0_next = twoLocationReg_0_MEM_im_0;
    twoLocationReg_0_MEM_re_1_next = twoLocationReg_0_MEM_re_1;
    twoLocationReg_0_MEM_im_1_next = twoLocationReg_0_MEM_im_1;
    if (rd_5_Addr == 1'b1) begin
      twoLocationReg_0_dout_re_reg_next = twoLocationReg_0_MEM_re_1;
      twoLocationReg_0_dout_im_reg_next = twoLocationReg_0_MEM_im_1;
    end
    else begin
      twoLocationReg_0_dout_re_reg_next = twoLocationReg_0_MEM_re_0;
      twoLocationReg_0_dout_im_reg_next = twoLocationReg_0_MEM_im_0;
    end
    if (wrEnb) begin
      if (wrAddr == 1'b1) begin
        twoLocationReg_0_MEM_re_1_next = wrData_re;
        twoLocationReg_0_MEM_im_1_next = wrData_im;
      end
      else begin
        twoLocationReg_0_MEM_re_0_next = wrData_re;
        twoLocationReg_0_MEM_im_0_next = wrData_im;
      end
    end
    x_re = twoLocationReg_0_dout_re_reg;
    x_im = twoLocationReg_0_dout_im_reg;
  end



  // Radix22ButterflyG1
  always @(posedge clk)
    begin : Radix22ButterflyG1_process
      if (reset == 1'b1) begin
        Radix22ButterflyG1_btf1_re_reg <= 20'sb00000000000000000000;
        Radix22ButterflyG1_btf1_im_reg <= 20'sb00000000000000000000;
        Radix22ButterflyG1_btf2_re_reg <= 20'sb00000000000000000000;
        Radix22ButterflyG1_btf2_im_reg <= 20'sb00000000000000000000;
        Radix22ButterflyG1_x_re_dly1 <= 19'sb0000000000000000000;
        Radix22ButterflyG1_x_im_dly1 <= 19'sb0000000000000000000;
        Radix22ButterflyG1_x_vld_dly1 <= 1'b0;
        xf_re <= 19'sb0000000000000000000;
        xf_im <= 19'sb0000000000000000000;
        xf_vld <= 1'b0;
        Radix22ButterflyG1_dinXtwdl_re_dly1 <= 19'sb0000000000000000000;
        Radix22ButterflyG1_dinXtwdl_im_dly1 <= 19'sb0000000000000000000;
        Radix22ButterflyG1_dinXtwdl_re_dly2 <= 19'sb0000000000000000000;
        Radix22ButterflyG1_dinXtwdl_im_dly2 <= 19'sb0000000000000000000;
        Radix22ButterflyG1_dinXtwdl_vld_dly1 <= 1'b0;
        Radix22ButterflyG1_dinXtwdl_vld_dly2 <= 1'b0;
        btf_vld <= 1'b0;
      end
      else begin
        if (enb) begin
          Radix22ButterflyG1_btf1_re_reg <= Radix22ButterflyG1_btf1_re_reg_next;
          Radix22ButterflyG1_btf1_im_reg <= Radix22ButterflyG1_btf1_im_reg_next;
          Radix22ButterflyG1_btf2_re_reg <= Radix22ButterflyG1_btf2_re_reg_next;
          Radix22ButterflyG1_btf2_im_reg <= Radix22ButterflyG1_btf2_im_reg_next;
          xf_re <= Radix22ButterflyG1_x_re_dly1;
          xf_im <= Radix22ButterflyG1_x_im_dly1;
          xf_vld <= Radix22ButterflyG1_x_vld_dly1;
          btf_vld <= Radix22ButterflyG1_dinXtwdl_vld_dly2;
          Radix22ButterflyG1_dinXtwdl_vld_dly2 <= Radix22ButterflyG1_dinXtwdl_vld_dly1;
          Radix22ButterflyG1_dinXtwdl_re_dly2 <= Radix22ButterflyG1_dinXtwdl_re_dly1;
          Radix22ButterflyG1_dinXtwdl_im_dly2 <= Radix22ButterflyG1_dinXtwdl_im_dly1;
          Radix22ButterflyG1_dinXtwdl_re_dly1 <= dinXTwdl_re;
          Radix22ButterflyG1_dinXtwdl_im_dly1 <= dinXTwdl_im;
          Radix22ButterflyG1_x_re_dly1 <= x_re;
          Radix22ButterflyG1_x_im_dly1 <= x_im;
          Radix22ButterflyG1_x_vld_dly1 <= x_vld;
          Radix22ButterflyG1_dinXtwdl_vld_dly1 <= proc_5_enb && dinXTwdl_5_1_vld;
        end
      end
    end

  assign dinxTwdlf_vld = ( ! proc_5_enb) && dinXTwdl_5_1_vld;
  assign Radix22ButterflyG1_add_cast = {Radix22ButterflyG1_x_re_dly1[18], Radix22ButterflyG1_x_re_dly1};
  assign Radix22ButterflyG1_add_cast_1 = {Radix22ButterflyG1_dinXtwdl_re_dly2[18], Radix22ButterflyG1_dinXtwdl_re_dly2};
  assign Radix22ButterflyG1_btf1_re_reg_next = Radix22ButterflyG1_add_cast + Radix22ButterflyG1_add_cast_1;
  assign Radix22ButterflyG1_sub_cast = {Radix22ButterflyG1_x_re_dly1[18], Radix22ButterflyG1_x_re_dly1};
  assign Radix22ButterflyG1_sub_cast_1 = {Radix22ButterflyG1_dinXtwdl_re_dly2[18], Radix22ButterflyG1_dinXtwdl_re_dly2};
  assign Radix22ButterflyG1_btf2_re_reg_next = Radix22ButterflyG1_sub_cast - Radix22ButterflyG1_sub_cast_1;
  assign Radix22ButterflyG1_add_cast_2 = {Radix22ButterflyG1_x_im_dly1[18], Radix22ButterflyG1_x_im_dly1};
  assign Radix22ButterflyG1_add_cast_3 = {Radix22ButterflyG1_dinXtwdl_im_dly2[18], Radix22ButterflyG1_dinXtwdl_im_dly2};
  assign Radix22ButterflyG1_btf1_im_reg_next = Radix22ButterflyG1_add_cast_2 + Radix22ButterflyG1_add_cast_3;
  assign Radix22ButterflyG1_sub_cast_2 = {Radix22ButterflyG1_x_im_dly1[18], Radix22ButterflyG1_x_im_dly1};
  assign Radix22ButterflyG1_sub_cast_3 = {Radix22ButterflyG1_dinXtwdl_im_dly2[18], Radix22ButterflyG1_dinXtwdl_im_dly2};
  assign Radix22ButterflyG1_btf2_im_reg_next = Radix22ButterflyG1_sub_cast_2 - Radix22ButterflyG1_sub_cast_3;
  assign dinXTwdlf_re = dinXTwdl_re;
  assign dinXTwdlf_im = dinXTwdl_im;
  assign btf1_re = Radix22ButterflyG1_btf1_re_reg[18:0];
  assign btf1_im = Radix22ButterflyG1_btf1_im_reg[18:0];
  assign btf2_re = Radix22ButterflyG1_btf2_re_reg[18:0];
  assign btf2_im = Radix22ButterflyG1_btf2_im_reg[18:0];



  rx_dma_test_src_SDFCommutator5 u_SDFCOMMUTATOR_5 (.clk(clk),
                                                    .reset(reset),
                                                    .enb(enb),
                                                    .din_5_vld_dly(din_5_vld_dly),
                                                    .xf_re(xf_re),  // sfix19_En5
                                                    .xf_im(xf_im),  // sfix19_En5
                                                    .xf_vld(xf_vld),
                                                    .dinXTwdlf_re(dinXTwdlf_re),  // sfix19_En5
                                                    .dinXTwdlf_im(dinXTwdlf_im),  // sfix19_En5
                                                    .dinxTwdlf_vld(dinxTwdlf_vld),
                                                    .btf1_re(btf1_re),  // sfix19_En5
                                                    .btf1_im(btf1_im),  // sfix19_En5
                                                    .btf2_re(btf2_re),  // sfix19_En5
                                                    .btf2_im(btf2_im),  // sfix19_En5
                                                    .btf_vld(btf_vld),
                                                    .wrData_re(wrData_re),  // sfix19_En5
                                                    .wrData_im(wrData_im),  // sfix19_En5
                                                    .wrAddr(wrAddr),  // ufix1
                                                    .wrEnb(wrEnb),
                                                    .dout_5_1_re(dout_5_1_re),  // sfix19_En5
                                                    .dout_5_1_im(dout_5_1_im),  // sfix19_En5
                                                    .dout_5_1_vld(dout_5_1_vld)
                                                    );

endmodule  // rx_dma_test_src_RADIX22FFT_SDF1_5

