// -------------------------------------------------------------
// 
// File Name: /home/draco/git/adi_dma_testing/iq_dma_example/hdl_ip/hdlsrc/rx_dma_test/rx_dma_test_src_TWDLROM_3_1.v
// Created: 2025-08-21 13:52:00
// 
// Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: rx_dma_test_src_TWDLROM_3_1
// Source Path: rx_dma_test/LDCR_D/Channelizer_CH1/FFT/TWDLROM_3_1
// Hierarchy Level: 3
// Model version: 9.535
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module rx_dma_test_src_TWDLROM_3_1
          (clk,
           reset,
           enb,
           dout_2_1_vld,
           twdl_3_1_re,
           twdl_3_1_im);


  input   clk;
  input   reset;
  input   enb;
  input   dout_2_1_vld;
  output  signed [13:0] twdl_3_1_re;  // sfix14_En12
  output  signed [13:0] twdl_3_1_im;  // sfix14_En12


  reg [3:0] Radix22TwdlMapping_cnt;  // ufix4
  reg [1:0] Radix22TwdlMapping_phase;  // ufix2
  reg [2:0] Radix22TwdlMapping_octantReg1;  // ufix3
  reg [5:0] Radix22TwdlMapping_twdlAddr_raw;  // ufix6
  reg [2:0] Radix22TwdlMapping_twdlAddrMap;  // ufix3
  reg  Radix22TwdlMapping_twdl45Reg;
  reg  Radix22TwdlMapping_dvldReg1;
  reg  Radix22TwdlMapping_dvldReg2;
  reg [3:0] Radix22TwdlMapping_cnt_next;  // ufix4
  reg [1:0] Radix22TwdlMapping_phase_next;  // ufix2
  reg [2:0] Radix22TwdlMapping_octantReg1_next;  // ufix3
  reg [5:0] Radix22TwdlMapping_twdlAddr_raw_next;  // ufix6
  reg [2:0] Radix22TwdlMapping_twdlAddrMap_next;  // ufix3
  reg  Radix22TwdlMapping_twdl45Reg_next;
  reg  Radix22TwdlMapping_dvldReg1_next;
  reg  Radix22TwdlMapping_dvldReg2_next;
  reg [2:0] twdlAddr;  // ufix3
  reg  twdlAddrVld;
  reg [2:0] twdlOctant;  // ufix3
  reg  twdl45;
  wire signed [13:0] Twiddle_re_table_data [0:7];  // sfix14_En12 [8]
  wire signed [13:0] twiddleS_re;  // sfix14_En12
  reg signed [13:0] twiddleReg_re;  // sfix14_En12
  wire signed [13:0] Twiddle_im_table_data [0:7];  // sfix14_En12 [8]
  wire signed [13:0] twiddleS_im;  // sfix14_En12
  reg signed [13:0] twiddleReg_im;  // sfix14_En12
  reg [2:0] twdlOctantReg;  // ufix3
  reg  twdl45Reg;
  reg signed [13:0] twdl_3_1_re_1;  // sfix14_En12
  reg signed [13:0] twdl_3_1_im_1;  // sfix14_En12
  reg [2:0] Radix22TwdlMapping_octant;  // ufix3
  reg [5:0] Radix22TwdlMapping_cnt_cast;  // ufix6
  reg signed [13:0] Radix22TwdlMapping_sub_cast;  // sfix14_En3
  reg signed [13:0] Radix22TwdlMapping_sub_temp;  // sfix14_En3
  reg signed [7:0] Radix22TwdlMapping_sub_temp_0;  // sfix8
  reg signed [7:0] Radix22TwdlMapping_sub_temp_1;  // sfix8
  reg signed [13:0] Radix22TwdlMapping_sub_cast_0;  // sfix14_En3
  reg signed [13:0] Radix22TwdlMapping_sub_temp_2;  // sfix14_En3
  reg signed [13:0] Radix22TwdlMapping_sub_cast_1;  // sfix14_En3
  reg signed [13:0] Radix22TwdlMapping_sub_temp_3;  // sfix14_En3
  reg [5:0] Radix22TwdlMapping_t_0_0;  // ufix6
  reg signed [7:0] Radix22TwdlMapping_t_1;  // sfix8
  reg signed [7:0] Radix22TwdlMapping_t_2_0;  // sfix8
  reg signed [13:0] Radix22TwdlOctCorr_twdlIn_re;  // sfix14_En12
  reg signed [13:0] Radix22TwdlOctCorr_twdlIn_im;  // sfix14_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_0;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_1;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_2;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_3;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_4;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_5;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_6;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_7;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_8;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_9;  // sfix15_En12
  reg signed [14:0] Radix22TwdlOctCorr_cast_10;  // sfix15_En12


  // Radix22TwdlMapping
  always @(posedge clk)
    begin : Radix22TwdlMapping_process
      if (reset == 1'b1) begin
        Radix22TwdlMapping_octantReg1 <= 3'b000;
        Radix22TwdlMapping_twdlAddr_raw <= 6'b000000;
        Radix22TwdlMapping_twdlAddrMap <= 3'b000;
        Radix22TwdlMapping_twdl45Reg <= 1'b0;
        Radix22TwdlMapping_dvldReg1 <= 1'b0;
        Radix22TwdlMapping_dvldReg2 <= 1'b0;
        Radix22TwdlMapping_cnt <= 4'b0000;
        Radix22TwdlMapping_phase <= 2'b00;
      end
      else begin
        if (enb) begin
          Radix22TwdlMapping_cnt <= Radix22TwdlMapping_cnt_next;
          Radix22TwdlMapping_phase <= Radix22TwdlMapping_phase_next;
          Radix22TwdlMapping_octantReg1 <= Radix22TwdlMapping_octantReg1_next;
          Radix22TwdlMapping_twdlAddr_raw <= Radix22TwdlMapping_twdlAddr_raw_next;
          Radix22TwdlMapping_twdlAddrMap <= Radix22TwdlMapping_twdlAddrMap_next;
          Radix22TwdlMapping_twdl45Reg <= Radix22TwdlMapping_twdl45Reg_next;
          Radix22TwdlMapping_dvldReg1 <= Radix22TwdlMapping_dvldReg1_next;
          Radix22TwdlMapping_dvldReg2 <= Radix22TwdlMapping_dvldReg2_next;
        end
      end
    end

  always @(Radix22TwdlMapping_cnt, Radix22TwdlMapping_dvldReg1,
       Radix22TwdlMapping_dvldReg2, Radix22TwdlMapping_octantReg1,
       Radix22TwdlMapping_phase, Radix22TwdlMapping_twdl45Reg,
       Radix22TwdlMapping_twdlAddrMap, Radix22TwdlMapping_twdlAddr_raw,
       dout_2_1_vld) begin
    Radix22TwdlMapping_sub_temp = 14'sb00000000000000;
    Radix22TwdlMapping_sub_temp_0 = 8'sb00000000;
    Radix22TwdlMapping_sub_temp_1 = 8'sb00000000;
    Radix22TwdlMapping_sub_temp_2 = 14'sb00000000000000;
    Radix22TwdlMapping_sub_temp_3 = 14'sb00000000000000;
    Radix22TwdlMapping_sub_cast_1 = 14'sb00000000000000;
    Radix22TwdlMapping_t_0_0 = 6'b000000;
    Radix22TwdlMapping_cnt_cast = 6'b000000;
    Radix22TwdlMapping_sub_cast_0 = 14'sb00000000000000;
    Radix22TwdlMapping_t_2_0 = 8'sb00000000;
    Radix22TwdlMapping_t_1 = 8'sb00000000;
    Radix22TwdlMapping_sub_cast = 14'sb00000000000000;
    Radix22TwdlMapping_cnt_next = Radix22TwdlMapping_cnt;
    Radix22TwdlMapping_phase_next = Radix22TwdlMapping_phase;
    Radix22TwdlMapping_dvldReg2_next = Radix22TwdlMapping_dvldReg1;
    Radix22TwdlMapping_dvldReg1_next = dout_2_1_vld;
    case ( Radix22TwdlMapping_twdlAddr_raw)
      6'b001000 :
        begin
          Radix22TwdlMapping_octant = 3'b000;
          Radix22TwdlMapping_twdl45Reg_next = 1'b1;
        end
      6'b010000 :
        begin
          Radix22TwdlMapping_octant = 3'b001;
          Radix22TwdlMapping_twdl45Reg_next = 1'b0;
        end
      6'b011000 :
        begin
          Radix22TwdlMapping_octant = 3'b010;
          Radix22TwdlMapping_twdl45Reg_next = 1'b1;
        end
      6'b100000 :
        begin
          Radix22TwdlMapping_octant = 3'b011;
          Radix22TwdlMapping_twdl45Reg_next = 1'b0;
        end
      6'b101000 :
        begin
          Radix22TwdlMapping_octant = 3'b100;
          Radix22TwdlMapping_twdl45Reg_next = 1'b1;
        end
      default :
        begin
          Radix22TwdlMapping_octant = Radix22TwdlMapping_twdlAddr_raw[5:3];
          Radix22TwdlMapping_twdl45Reg_next = 1'b0;
        end
    endcase
    Radix22TwdlMapping_octantReg1_next = Radix22TwdlMapping_octant;
    case ( Radix22TwdlMapping_octant)
      3'b000 :
        begin
          Radix22TwdlMapping_twdlAddrMap_next = Radix22TwdlMapping_twdlAddr_raw[2:0];
        end
      3'b001 :
        begin
          Radix22TwdlMapping_t_1 = {2'b0, Radix22TwdlMapping_twdlAddr_raw};
          Radix22TwdlMapping_sub_temp_0 = 8'sb00010000 - Radix22TwdlMapping_t_1;
          Radix22TwdlMapping_twdlAddrMap_next = Radix22TwdlMapping_sub_temp_0[2:0];
        end
      3'b010 :
        begin
          Radix22TwdlMapping_t_2_0 = {2'b0, Radix22TwdlMapping_twdlAddr_raw};
          Radix22TwdlMapping_sub_temp_1 = Radix22TwdlMapping_t_2_0 - 8'sb00010000;
          Radix22TwdlMapping_twdlAddrMap_next = Radix22TwdlMapping_sub_temp_1[2:0];
        end
      3'b011 :
        begin
          Radix22TwdlMapping_sub_cast_0 = {5'b0, {Radix22TwdlMapping_twdlAddr_raw, 3'b000}};
          Radix22TwdlMapping_sub_temp_2 = 14'sb00000100000000 - Radix22TwdlMapping_sub_cast_0;
          Radix22TwdlMapping_twdlAddrMap_next = Radix22TwdlMapping_sub_temp_2[5:3];
        end
      3'b100 :
        begin
          Radix22TwdlMapping_sub_cast_1 = {5'b0, {Radix22TwdlMapping_twdlAddr_raw, 3'b000}};
          Radix22TwdlMapping_sub_temp_3 = Radix22TwdlMapping_sub_cast_1 - 14'sb00000100000000;
          Radix22TwdlMapping_twdlAddrMap_next = Radix22TwdlMapping_sub_temp_3[5:3];
        end
      default :
        begin
          Radix22TwdlMapping_sub_cast = {5'b0, {Radix22TwdlMapping_twdlAddr_raw, 3'b000}};
          Radix22TwdlMapping_sub_temp = 14'sb00000110000000 - Radix22TwdlMapping_sub_cast;
          Radix22TwdlMapping_twdlAddrMap_next = Radix22TwdlMapping_sub_temp[5:3];
        end
    endcase
    if (Radix22TwdlMapping_phase == 2'b00) begin
      Radix22TwdlMapping_twdlAddr_raw_next = 6'b000000;
    end
    else if (Radix22TwdlMapping_phase == 2'b01) begin
      Radix22TwdlMapping_t_0_0 = {2'b0, Radix22TwdlMapping_cnt};
      Radix22TwdlMapping_twdlAddr_raw_next = Radix22TwdlMapping_t_0_0 <<< 8'd1;
    end
    else if (Radix22TwdlMapping_phase == 2'b10) begin
      Radix22TwdlMapping_twdlAddr_raw_next = {2'b0, Radix22TwdlMapping_cnt};
    end
    else begin
      Radix22TwdlMapping_cnt_cast = {2'b0, Radix22TwdlMapping_cnt};
      Radix22TwdlMapping_twdlAddr_raw_next = (Radix22TwdlMapping_cnt_cast <<< 8'd1) + Radix22TwdlMapping_cnt_cast;
    end
    if (dout_2_1_vld && (Radix22TwdlMapping_cnt > 4'b1110)) begin
      Radix22TwdlMapping_phase_next = Radix22TwdlMapping_phase + 2'b01;
    end
    if (dout_2_1_vld) begin
      Radix22TwdlMapping_cnt_next = Radix22TwdlMapping_cnt + 4'b0001;
    end
    twdlAddr = Radix22TwdlMapping_twdlAddrMap;
    twdlAddrVld = Radix22TwdlMapping_dvldReg2;
    twdlOctant = Radix22TwdlMapping_octantReg1;
    twdl45 = Radix22TwdlMapping_twdl45Reg;
  end



  // Twiddle ROM1
  assign Twiddle_re_table_data[0] = 14'sb01000000000000;
  assign Twiddle_re_table_data[1] = 14'sb00111111101100;
  assign Twiddle_re_table_data[2] = 14'sb00111110110001;
  assign Twiddle_re_table_data[3] = 14'sb00111101010000;
  assign Twiddle_re_table_data[4] = 14'sb00111011001000;
  assign Twiddle_re_table_data[5] = 14'sb00111000011100;
  assign Twiddle_re_table_data[6] = 14'sb00110101001110;
  assign Twiddle_re_table_data[7] = 14'sb00110001011110;
  assign twiddleS_re = Twiddle_re_table_data[twdlAddr];



  always @(posedge clk)
    begin : TWIDDLEROM_RE_process
      if (reset == 1'b1) begin
        twiddleReg_re <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          twiddleReg_re <= twiddleS_re;
        end
      end
    end



  // Twiddle ROM2
  assign Twiddle_im_table_data[0] = 14'sb00000000000000;
  assign Twiddle_im_table_data[1] = 14'sb11111001101111;
  assign Twiddle_im_table_data[2] = 14'sb11110011100001;
  assign Twiddle_im_table_data[3] = 14'sb11101101011011;
  assign Twiddle_im_table_data[4] = 14'sb11100111100001;
  assign Twiddle_im_table_data[5] = 14'sb11100001110101;
  assign Twiddle_im_table_data[6] = 14'sb11011100011100;
  assign Twiddle_im_table_data[7] = 14'sb11010111011010;
  assign twiddleS_im = Twiddle_im_table_data[twdlAddr];



  always @(posedge clk)
    begin : TWIDDLEROM_IM_process
      if (reset == 1'b1) begin
        twiddleReg_im <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          twiddleReg_im <= twiddleS_im;
        end
      end
    end



  always @(posedge clk)
    begin : intdelay_process
      if (reset == 1'b1) begin
        twdlOctantReg <= 3'b000;
      end
      else begin
        if (enb) begin
          twdlOctantReg <= twdlOctant;
        end
      end
    end



  always @(posedge clk)
    begin : intdelay_1_process
      if (reset == 1'b1) begin
        twdl45Reg <= 1'b0;
      end
      else begin
        if (enb) begin
          twdl45Reg <= twdl45;
        end
      end
    end



  // Radix22TwdlOctCorr
  always @(twdl45Reg, twdlOctantReg, twiddleReg_im, twiddleReg_re) begin
    Radix22TwdlOctCorr_cast_0 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_2 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_4 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_6 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_8 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_10 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_3 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_9 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_1 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_7 = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast = 15'sb000000000000000;
    Radix22TwdlOctCorr_cast_5 = 15'sb000000000000000;
    Radix22TwdlOctCorr_twdlIn_re = twiddleReg_re;
    Radix22TwdlOctCorr_twdlIn_im = twiddleReg_im;
    if (twdl45Reg) begin
      case ( twdlOctantReg)
        3'b000 :
          begin
            Radix22TwdlOctCorr_twdlIn_re = 14'sb00101101010000;
            Radix22TwdlOctCorr_twdlIn_im = 14'sb11010010110000;
          end
        3'b010 :
          begin
            Radix22TwdlOctCorr_twdlIn_re = 14'sb11010010110000;
            Radix22TwdlOctCorr_twdlIn_im = 14'sb11010010110000;
          end
        3'b100 :
          begin
            Radix22TwdlOctCorr_twdlIn_re = 14'sb11010010110000;
            Radix22TwdlOctCorr_twdlIn_im = 14'sb00101101010000;
          end
        default :
          begin
            Radix22TwdlOctCorr_twdlIn_re = 14'sb00101101010000;
            Radix22TwdlOctCorr_twdlIn_im = 14'sb11010010110000;
          end
      endcase
    end
    else begin
      case ( twdlOctantReg)
        3'b000 :
          begin
          end
        3'b001 :
          begin
            Radix22TwdlOctCorr_cast = {twiddleReg_im[13], twiddleReg_im};
            Radix22TwdlOctCorr_cast_0 =  - (Radix22TwdlOctCorr_cast);
            Radix22TwdlOctCorr_twdlIn_re = Radix22TwdlOctCorr_cast_0[13:0];
            Radix22TwdlOctCorr_cast_5 = {twiddleReg_re[13], twiddleReg_re};
            Radix22TwdlOctCorr_cast_6 =  - (Radix22TwdlOctCorr_cast_5);
            Radix22TwdlOctCorr_twdlIn_im = Radix22TwdlOctCorr_cast_6[13:0];
          end
        3'b010 :
          begin
            Radix22TwdlOctCorr_twdlIn_re = twiddleReg_im;
            Radix22TwdlOctCorr_cast_7 = {twiddleReg_re[13], twiddleReg_re};
            Radix22TwdlOctCorr_cast_8 =  - (Radix22TwdlOctCorr_cast_7);
            Radix22TwdlOctCorr_twdlIn_im = Radix22TwdlOctCorr_cast_8[13:0];
          end
        3'b011 :
          begin
            Radix22TwdlOctCorr_cast_1 = {twiddleReg_re[13], twiddleReg_re};
            Radix22TwdlOctCorr_cast_2 =  - (Radix22TwdlOctCorr_cast_1);
            Radix22TwdlOctCorr_twdlIn_re = Radix22TwdlOctCorr_cast_2[13:0];
            Radix22TwdlOctCorr_twdlIn_im = twiddleReg_im;
          end
        3'b100 :
          begin
            Radix22TwdlOctCorr_cast_3 = {twiddleReg_re[13], twiddleReg_re};
            Radix22TwdlOctCorr_cast_4 =  - (Radix22TwdlOctCorr_cast_3);
            Radix22TwdlOctCorr_twdlIn_re = Radix22TwdlOctCorr_cast_4[13:0];
            Radix22TwdlOctCorr_cast_9 = {twiddleReg_im[13], twiddleReg_im};
            Radix22TwdlOctCorr_cast_10 =  - (Radix22TwdlOctCorr_cast_9);
            Radix22TwdlOctCorr_twdlIn_im = Radix22TwdlOctCorr_cast_10[13:0];
          end
        default :
          begin
            Radix22TwdlOctCorr_twdlIn_re = twiddleReg_im;
            Radix22TwdlOctCorr_twdlIn_im = twiddleReg_re;
          end
      endcase
    end
    twdl_3_1_re_1 = Radix22TwdlOctCorr_twdlIn_re;
    twdl_3_1_im_1 = Radix22TwdlOctCorr_twdlIn_im;
  end



  assign twdl_3_1_re = twdl_3_1_re_1;

  assign twdl_3_1_im = twdl_3_1_im_1;

endmodule  // rx_dma_test_src_TWDLROM_3_1

